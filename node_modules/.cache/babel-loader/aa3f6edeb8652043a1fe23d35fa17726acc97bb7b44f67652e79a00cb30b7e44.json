{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\reactapp\\\\firstproject\\\\src\\\\component\\\\Billing1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Billing1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Billing1() {\n  _s();\n  const [ProductId, setProductId] = useState(\"\");\n  const [productCount, setProductCount] = useState(0);\n  const [editMode, setEditMode] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [User, setUser] = useState({\n    name: \"\",\n    address: \"\",\n    list: [],\n    totalAmount: 0\n  });\n  const [paymentMode, setPaymentMode] = useState(\"normal\"); // \"normal\" or \"userId\"\n  const [payerId, setPayerId] = useState(\"\");\n  const onchageUser = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const HandlesAdd = id => {\n    if (!id) {\n      alert(\"Please enter a valid Product ID\");\n      return;\n    }\n    if (productCount <= 0) {\n      alert(\"Product count must be greater than zero\");\n      return;\n    }\n    if (editMode) {\n      // EDIT existing product in list\n      const updatedList = User.list.map(item => {\n        console.log(\"Editing item productId:\", item.productId);\n        if (item.productId === editId) {\n          if (!item.productId) {\n            alert(\"Cannot edit item with missing productId\");\n            return item; // skip editing if productId missing\n          }\n          return {\n            ...item,\n            quantity: productCount\n          };\n        }\n        return item;\n      });\n\n      // Recalculate totalAmount\n      const updatedTotal = updatedList.reduce((sum, item) => sum + item.totalPrice * item.quantity, 0);\n      setUser(prev => ({\n        ...prev,\n        list: updatedList,\n        totalAmount: updatedTotal\n      }));\n      setEditMode(false);\n      setEditId(null);\n    } else {\n      // ADD new product\n      axios.get(`http://localhost:5000/api/product/get/${id}`).then(res => {\n        const product = res.data;\n        console.log(\"Fetched product:\", product);\n        if (!product || !product._id) {\n          alert(\"Invalid product data received from server\");\n          return;\n        }\n        const productStock = parseInt(product.total);\n        const productPrice = parseInt(product.price);\n        if (productStock === 0) {\n          alert(\"Out of stock!\");\n          return;\n        }\n        if (productCount > productStock) {\n          alert(`Only ${productStock} in stock`);\n          return;\n        }\n        const newItem = {\n          productId: product._id,\n          productName: product.name,\n          quantity: productCount,\n          totalPrice: productPrice\n        };\n\n        // Make sure productId is valid before adding\n        if (!newItem.productId) {\n          alert(\"Product ID missing! Cannot add product.\");\n          return;\n        }\n\n        // Check if product already exists in list â€” optionally update quantity instead of adding duplicate\n        const existingIndex = User.list.findIndex(item => item.productId === newItem.productId);\n        let updatedList = [];\n        if (existingIndex !== -1) {\n          // Update existing product quantity\n          updatedList = [...User.list];\n          updatedList[existingIndex].quantity += productCount;\n        } else {\n          // Add new product\n          updatedList = [...User.list, newItem];\n        }\n        const updatedTotal = updatedList.reduce((sum, item) => sum + item.totalPrice * item.quantity, 0);\n        setUser(prev => ({\n          ...prev,\n          list: updatedList,\n          totalAmount: updatedTotal\n        }));\n\n        // Reduce stock on server\n        axios.put(`http://localhost:5000/api/product/put/${id}`, {\n          ...product,\n          total: (productStock - productCount).toString()\n        }).catch(err => {\n          console.error(\"Error updating product stock:\", err);\n        });\n      }).catch(err => {\n        alert(\"Error fetching product from server\");\n        console.error(err);\n      });\n    }\n  };\n  const handleDelete = id => {\n    const updatedList = User.list.filter(item => item.productId !== id);\n    const updatedTotal = updatedList.reduce((sum, item) => sum + item.totalPrice * item.quantity, 0);\n    setUser(prev => ({\n      ...prev,\n      list: updatedList,\n      totalAmount: updatedTotal\n    }));\n  };\n  const handleEdit = item => {\n    setProductId(item.productId);\n    setProductCount(item.quantity);\n    setEditMode(true);\n    setEditId(item.productId);\n  };\n  const handleSubmitBill = async () => {\n    if (!User.name || !User.address || User.list.length === 0) {\n      alert(\"Please complete the bill\");\n      return;\n    }\n\n    // If payment via user ID, validate payer and balance\n    if (paymentMode === \"userId\") {\n      if (!payerId) {\n        alert(\"Please enter payer User ID\");\n        return;\n      }\n      try {\n        const payerRes = await axios.get(`http://localhost:5000/api/user/get/$`);\n        const payer = payerRes.data;\n        if (!payer) {\n          alert(\"Payer user not found\");\n          return;\n        }\n        if (payer.money < User.totalAmount) {\n          alert(\"Payer has insufficient balance\");\n          return;\n        }\n\n        // Deduct money from payer and update on server\n        await axios.put(`http://localhost:5000/api/user/get/688b3493648657c9b298f3f7`, {\n          ...payer,\n          money: payer.money - User.totalAmount\n        });\n      } catch (error) {\n        alert(\"Error processing payment\");\n        console.error(error);\n        return;\n      }\n    }\n\n    // Submit the bill as usual\n    const billData = {\n      name: User.name,\n      address: User.address,\n      products: User.list,\n      totalAmount: User.totalAmount,\n      date: new Date().toISOString(),\n      paidBy: paymentMode === \"userId\" ? payerId : \"Normal Payment\"\n    };\n    console.log(billData);\n    axios.post(\"http://localhost:5000/api/sales/post\", billData).then(() => {\n      alert(\"Bill submitted successfully\");\n      setUser({\n        name: \"\",\n        address: \"\",\n        list: [],\n        totalAmount: 0\n      });\n      setProductId(\"\");\n      setProductCount(0);\n      setPayerId(\"\");\n      setPaymentMode(\"normal\");\n    }).catch(err => {\n      alert(\"Error submitting bill\");\n      console.error(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"billing-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"billing-h2\",\n      children: \"Billing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"billing-form\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"billing-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"billing-input\",\n        value: User.name,\n        name: \"name\",\n        onChange: onchageUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 93\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"billing-label\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"billing-textarea\",\n        name: \"address\",\n        value: User.address,\n        onChange: onchageUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"billing-label\",\n        children: \"Product ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"billing-input\",\n        value: ProductId,\n        type: \"text\",\n        onChange: e => setProductId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 115\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"billing-label\",\n        children: \"Product Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"billing-input\",\n        value: productCount,\n        type: \"number\",\n        onChange: e => setProductCount(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 131\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"billing-button\",\n        type: \"button\",\n        onClick: () => HandlesAdd(ProductId),\n        children: editMode ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"billing-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"billing-radio-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"billing-radio-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"normal\",\n          checked: paymentMode === \"normal\",\n          onChange: () => setPaymentMode(\"normal\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }, this), \" Pay Normally\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"billing-radio-label\",\n        style: {\n          marginLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"userId\",\n          checked: paymentMode === \"userId\",\n          onChange: () => setPaymentMode(\"userId\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 7\n        }, this), \" Pay Through User ID\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 3\n    }, this), paymentMode === \"userId\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"billing-payer-id\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"billing-label\",\n        children: \"Payer User ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"billing-input\",\n        type: \"text\",\n        value: payerId,\n        onChange: e => setPayerId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"billing-h2\",\n      children: [\"Customer: \", User.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"billing-h3\",\n      children: [\"Address: \", User.address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"billing-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"billing-th\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"billing-th\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"billing-th\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"billing-th\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: User.list.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"billing-tr\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"billing-td\",\n            children: item.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"billing-td\",\n            children: [\"\\u20B9\", item.totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"billing-td\",\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"billing-td\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"billing-action-button\",\n              onClick: () => handleEdit(item),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"billing-action-button\",\n              onClick: () => handleDelete(item.productId),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this)]\n        }, item.productId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"billing-h2\",\n      children: [\"Total: \\u20B9\", User.totalAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"billing-submit-button\",\n      type: \"button\",\n      onClick: handleSubmitBill,\n      children: \"Submit Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 1\n  }, this);\n}\n_s(Billing1, \"QJDuy58C0bHlV2roHgw2gyWxbDo=\");\n_c = Billing1;\nvar _c;\n$RefreshReg$(_c, \"Billing1\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Billing1","_s","ProductId","setProductId","productCount","setProductCount","editMode","setEditMode","editId","setEditId","User","setUser","name","address","list","totalAmount","paymentMode","setPaymentMode","payerId","setPayerId","onchageUser","e","value","target","prev","HandlesAdd","id","alert","updatedList","map","item","console","log","productId","quantity","updatedTotal","reduce","sum","totalPrice","get","then","res","product","data","_id","productStock","parseInt","total","productPrice","price","newItem","productName","existingIndex","findIndex","put","toString","catch","err","error","handleDelete","filter","handleEdit","handleSubmitBill","length","payerRes","payer","money","billData","products","date","Date","toISOString","paidBy","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","onChange","type","Number","onClick","checked","style","marginLeft","i","_c","$RefreshReg$"],"sources":["D:/React/reactapp/firstproject/src/component/Billing1.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Billing1.css';\r\n\r\nexport default function Billing1() {\r\n  const [ProductId, setProductId] = useState(\"\");\r\n  const [productCount, setProductCount] = useState(0);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editId, setEditId] = useState(null);\r\n\r\n  const [User, setUser] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    list: [],\r\n    totalAmount: 0\r\n  });\r\n\r\n  const [paymentMode, setPaymentMode] = useState(\"normal\"); // \"normal\" or \"userId\"\r\n  const [payerId, setPayerId] = useState(\"\");\r\n\r\n  const onchageUser = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n const HandlesAdd = (id) => {\r\n  if (!id) {\r\n    alert(\"Please enter a valid Product ID\");\r\n    return;\r\n  }\r\n\r\n  if (productCount <= 0) {\r\n    alert(\"Product count must be greater than zero\");\r\n    return;\r\n  }\r\n\r\n  if (editMode) {\r\n    // EDIT existing product in list\r\n    const updatedList = User.list.map(item => {\r\n      console.log(\"Editing item productId:\", item.productId);\r\n      if (item.productId === editId) {\r\n        if (!item.productId) {\r\n          alert(\"Cannot edit item with missing productId\");\r\n          return item; // skip editing if productId missing\r\n        }\r\n        return { ...item, quantity: productCount };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    // Recalculate totalAmount\r\n    const updatedTotal = updatedList.reduce((sum, item) => sum + item.totalPrice * item.quantity, 0);\r\n\r\n    setUser(prev => ({\r\n      ...prev,\r\n      list: updatedList,\r\n      totalAmount: updatedTotal\r\n    }));\r\n\r\n    setEditMode(false);\r\n    setEditId(null);\r\n\r\n  } else {\r\n    // ADD new product\r\n    axios.get(`http://localhost:5000/api/product/get/${id}`)\r\n      .then(res => {\r\n        const product = res.data;\r\n        console.log(\"Fetched product:\", product);\r\n\r\n        if (!product || !product._id) {\r\n          alert(\"Invalid product data received from server\");\r\n          return;\r\n        }\r\n\r\n        const productStock = parseInt(product.total);\r\n        const productPrice = parseInt(product.price);\r\n\r\n        if (productStock === 0) {\r\n          alert(\"Out of stock!\");\r\n          return;\r\n        }\r\n\r\n        if (productCount > productStock) {\r\n          alert(`Only ${productStock} in stock`);\r\n          return;\r\n        }\r\n\r\n        const newItem = {\r\n          productId: product._id,\r\n          productName: product.name,\r\n          quantity: productCount,\r\n          totalPrice: productPrice\r\n        };\r\n\r\n        // Make sure productId is valid before adding\r\n        if (!newItem.productId) {\r\n          alert(\"Product ID missing! Cannot add product.\");\r\n          return;\r\n        }\r\n\r\n        // Check if product already exists in list â€” optionally update quantity instead of adding duplicate\r\n        const existingIndex = User.list.findIndex(item => item.productId === newItem.productId);\r\n        let updatedList = [];\r\n        if (existingIndex !== -1) {\r\n          // Update existing product quantity\r\n          updatedList = [...User.list];\r\n          updatedList[existingIndex].quantity += productCount;\r\n        } else {\r\n          // Add new product\r\n          updatedList = [...User.list, newItem];\r\n        }\r\n\r\n        const updatedTotal = updatedList.reduce((sum, item) => sum + item.totalPrice * item.quantity, 0);\r\n\r\n        setUser(prev => ({\r\n          ...prev,\r\n          list: updatedList,\r\n          totalAmount: updatedTotal\r\n        }));\r\n\r\n        // Reduce stock on server\r\n        axios.put(`http://localhost:5000/api/product/put/${id}`, {\r\n          ...product,\r\n          total: (productStock - productCount).toString()\r\n        }).catch(err => {\r\n          console.error(\"Error updating product stock:\", err);\r\n        });\r\n\r\n      }).catch(err => {\r\n        alert(\"Error fetching product from server\");\r\n        console.error(err);\r\n      });\r\n  }\r\n};\r\n\r\n\r\n  const handleDelete = (id) => {\r\n    const updatedList = User.list.filter(item => item.productId !== id);\r\n    const updatedTotal = updatedList.reduce((sum, item) => sum + item.totalPrice * item.quantity, 0);\r\n    setUser(prev => ({ ...prev, list: updatedList, totalAmount: updatedTotal }));\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setProductId(item.productId);\r\n    setProductCount(item.quantity);\r\n    setEditMode(true);\r\n    setEditId(item.productId);\r\n  };\r\n\r\n  const handleSubmitBill = async () => {\r\n    if (!User.name || !User.address || User.list.length === 0) {\r\n      alert(\"Please complete the bill\");\r\n      return;\r\n    }\r\n\r\n    // If payment via user ID, validate payer and balance\r\n    if (paymentMode === \"userId\") {\r\n      if (!payerId) {\r\n        alert(\"Please enter payer User ID\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const payerRes = await axios.get(`http://localhost:5000/api/user/get/$`);\r\n        const payer = payerRes.data;\r\n\r\n        if (!payer) {\r\n          alert(\"Payer user not found\");\r\n          return;\r\n        }\r\n\r\n        if (payer.money < User.totalAmount) {\r\n          alert(\"Payer has insufficient balance\");\r\n          return;\r\n        }\r\n\r\n        // Deduct money from payer and update on server\r\n        await axios.put(`http://localhost:5000/api/user/get/688b3493648657c9b298f3f7`, {\r\n          ...payer,\r\n          money: payer.money - User.totalAmount\r\n        });\r\n\r\n      } catch (error) {\r\n        alert(\"Error processing payment\");\r\n        console.error(error);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Submit the bill as usual\r\n    const billData = {\r\n      name: User.name,\r\n      address: User.address,\r\n      products: User.list,\r\n      totalAmount: User.totalAmount,\r\n      date: new Date().toISOString(),\r\n      paidBy: paymentMode === \"userId\" ? payerId : \"Normal Payment\"\r\n    };\r\n    console.log(billData)\r\n    axios.post(\"http://localhost:5000/api/sales/post\", billData)\r\n      .then(() => {\r\n        alert(\"Bill submitted successfully\");\r\n        setUser({\r\n          name: \"\",\r\n          address: \"\",\r\n          list: [],\r\n          totalAmount: 0\r\n        });\r\n        setProductId(\"\");\r\n        setProductCount(0);\r\n        setPayerId(\"\");\r\n        setPaymentMode(\"normal\");\r\n      })\r\n      .catch(err => {\r\n        alert(\"Error submitting bill\");\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n<div className=\"billing-container\">\r\n  <h1 className='billing-h2'>Billing</h1>\r\n  <form className=\"billing-form\" onSubmit={e => e.preventDefault()}>\r\n    <label className=\"billing-label\">Name</label>\r\n    <input className=\"billing-input\" value={User.name} name='name' onChange={onchageUser} /><br />\r\n\r\n    <label className=\"billing-label\">Address</label>\r\n    <textarea className=\"billing-textarea\" name='address' value={User.address} onChange={onchageUser}></textarea><br />\r\n\r\n    <label className=\"billing-label\">Product ID</label>\r\n    <input className=\"billing-input\" value={ProductId} type='text' onChange={e => setProductId(e.target.value)} /><br />\r\n\r\n    <label className=\"billing-label\">Product Count</label>\r\n    <input className=\"billing-input\" value={productCount} type='number' onChange={e => setProductCount(Number(e.target.value))} /><br />\r\n\r\n    <button className=\"billing-button\" type=\"button\" onClick={() => HandlesAdd(ProductId)}>\r\n      {editMode ? \"Update\" : \"Add\"}\r\n    </button>\r\n  </form>\r\n\r\n  <hr className=\"billing-hr\" />\r\n\r\n  <div className=\"billing-radio-group\">\r\n    <label className=\"billing-radio-label\">\r\n      <input\r\n        type=\"radio\"\r\n        value=\"normal\"\r\n        checked={paymentMode === \"normal\"}\r\n        onChange={() => setPaymentMode(\"normal\")}\r\n      /> Pay Normally\r\n    </label>\r\n\r\n    <label className=\"billing-radio-label\" style={{ marginLeft: '20px' }}>\r\n      <input\r\n        type=\"radio\"\r\n        value=\"userId\"\r\n        checked={paymentMode === \"userId\"}\r\n        onChange={() => setPaymentMode(\"userId\")}\r\n      /> Pay Through User ID\r\n    </label>\r\n  </div>\r\n\r\n  {paymentMode === \"userId\" && (\r\n    <div className=\"billing-payer-id\">\r\n      <label className=\"billing-label\">Payer User ID: </label>\r\n      <input\r\n        className=\"billing-input\"\r\n        type=\"text\"\r\n        value={payerId}\r\n        onChange={e => setPayerId(e.target.value)}\r\n      />\r\n    </div>\r\n  )}\r\n\r\n  <h2 className=\"billing-h2\">Customer: {User.name}</h2>\r\n  <h3 className=\"billing-h3\">Address: {User.address}</h3>\r\n\r\n  <table className=\"billing-table\">\r\n    <thead>\r\n      <tr>\r\n        <th className=\"billing-th\">Name</th>\r\n        <th className=\"billing-th\">Price</th>\r\n        <th className=\"billing-th\">Quantity</th>\r\n        <th className=\"billing-th\">Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {User.list.map((item, i) => (\r\n        <tr key={item.productId} className=\"billing-tr\">\r\n          <td className=\"billing-td\">{item.productName}</td>\r\n          <td className=\"billing-td\">â‚¹{item.totalPrice}</td>\r\n          <td className=\"billing-td\">{item.quantity}</td>\r\n          <td className=\"billing-td\">\r\n            <button className=\"billing-action-button\" onClick={() => handleEdit(item)}>Edit</button>\r\n            <button className=\"billing-action-button\" onClick={() => handleDelete(item.productId)}>Delete</button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n\r\n  <h2 className=\"billing-h2\">Total: â‚¹{User.totalAmount}</h2>\r\n  <button className=\"billing-submit-button\" type=\"button\" onClick={handleSubmitBill}>Submit Bill</button>\r\n</div>\r\n\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}