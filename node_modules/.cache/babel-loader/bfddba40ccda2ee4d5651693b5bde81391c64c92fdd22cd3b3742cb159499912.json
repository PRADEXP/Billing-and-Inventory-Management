{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\reactapp\\\\firstproject\\\\src\\\\component\\\\SalesComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './SalesComponent.css'; // optional, for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SalesComponent() {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [mostSoldProduct, setMostSoldProduct] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:3000/sales').then(res => {\n      const data = res.data;\n      setSales(data);\n\n      // // Calculate total revenue\n      // const total = data.reduce((sum, sale) => sum + sale.totalAmount, 0)\n      // setTotalRevenue(total)\n\n      // Flatten all products and calculate frequency\n      // const productMap = {}\n      // data.forEach(sale => {\n      //   sale.products.forEach(product => {\n      //     if (!productMap[product.name]) {\n      //       productMap[product.name] = product.count\n      //     } else {\n      //       productMap[product.name] += product.count\n      //     }\n      //   })\n      // })\n\n      // Find most sold\n      // const maxProduct = Object.entries(productMap).reduce((max, curr) =>\n      //   curr[1] > max[1] ? curr : max, [\"\", 0]\n      // )\n      // setMostSoldProduct({ name: maxProduct[0], count: maxProduct[1] })\n    }).catch(err => console.error(\"Failed to fetch sales:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sales Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Revenue:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this), \" \\u20B9\", totalRevenue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Bills:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), \" \", sales.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), mostSoldProduct && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Most Sold Product:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this), \" \", mostSoldProduct.name, \" (\", mostSoldProduct.count, \" sold)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sales.map((sale, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(sale.date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sale.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sale.products.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [p.name, \" \\xD7 \", p.count]\n            }, p.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"\\u20B9\", sale.totalAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SalesComponent, \"ezLo13Y1qz/QbZe/foHnmw71/w0=\");\n_c = SalesComponent;\nvar _c;\n$RefreshReg$(_c, \"SalesComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SalesComponent","_s","sales","setSales","totalRevenue","setTotalRevenue","mostSoldProduct","setMostSoldProduct","get","then","res","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","name","count","map","sale","index","Date","date","toLocaleString","products","p","id","totalAmount","_c","$RefreshReg$"],"sources":["D:/React/reactapp/firstproject/src/component/SalesComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport './SalesComponent.css' // optional, for styling\r\n\r\nexport default function SalesComponent() {\r\n  const [sales, setSales] = useState([])\r\n  const [totalRevenue, setTotalRevenue] = useState(0)\r\n  const [mostSoldProduct, setMostSoldProduct] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/sales')\r\n      .then(res => {\r\n        const data = res.data\r\n        setSales(data)\r\n\r\n        // // Calculate total revenue\r\n        // const total = data.reduce((sum, sale) => sum + sale.totalAmount, 0)\r\n        // setTotalRevenue(total)\r\n\r\n        // Flatten all products and calculate frequency\r\n        // const productMap = {}\r\n        // data.forEach(sale => {\r\n        //   sale.products.forEach(product => {\r\n        //     if (!productMap[product.name]) {\r\n        //       productMap[product.name] = product.count\r\n        //     } else {\r\n        //       productMap[product.name] += product.count\r\n        //     }\r\n        //   })\r\n        // })\r\n\r\n        // Find most sold\r\n        // const maxProduct = Object.entries(productMap).reduce((max, curr) =>\r\n        //   curr[1] > max[1] ? curr : max, [\"\", 0]\r\n        // )\r\n        // setMostSoldProduct({ name: maxProduct[0], count: maxProduct[1] })\r\n\r\n      })\r\n      .catch(err => console.error(\"Failed to fetch sales:\", err))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"analytics-container\">\r\n      <h1>Sales Analytics</h1>\r\n      <p><strong>Total Revenue:</strong> ₹{totalRevenue}</p>\r\n      <p><strong>Total Bills:</strong> {sales.length}</p>\r\n      {mostSoldProduct && (\r\n        <p><strong>Most Sold Product:</strong> {mostSoldProduct.name} ({mostSoldProduct.count} sold)</p>\r\n      )}\r\n\r\n      <h2>Sales History</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Customer</th>\r\n            <th>Products</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sales.map((sale, index) => (\r\n            <tr key={index}>\r\n              <td>{new Date(sale.date).toLocaleString()}</td>\r\n              <td>{sale.name}</td>\r\n              <td>\r\n                {sale.products.map(p => (\r\n                  <div key={p.id}>{p.name} × {p.count}</div>\r\n                ))}\r\n              </td>\r\n              <td>₹{sale.totalAmount}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}